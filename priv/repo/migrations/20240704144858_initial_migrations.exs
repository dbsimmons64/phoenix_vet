defmodule PhoenixVet.Repo.Migrations.InitialMigrations do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:pets, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
      add :date_of_birth, :date
      add :name, :text
      add :type, :text

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :owner_id, :bigint, null: false
    end

    create table(:owners, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
    end

    alter table(:pets) do
      modify :owner_id,
             references(:owners,
               column: :id,
               name: "pets_owner_id_fkey",
               type: :bigint,
               prefix: "public"
             )
    end

    alter table(:owners) do
      add :email, :text
      add :name, :text
      add :phone, :text

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end
  end

  def down do
    alter table(:owners) do
      remove :updated_at
      remove :inserted_at
      remove :phone
      remove :name
      remove :email
    end

    drop constraint(:pets, "pets_owner_id_fkey")

    alter table(:pets) do
      modify :owner_id, :bigint
    end

    drop table(:owners)

    drop table(:pets)
  end
end
